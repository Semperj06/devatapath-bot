from aiogram import Router, types
from aiogram.utils.keyboard import InlineKeyboardBuilder  # Builder –¥–ª—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä
from keyboards.menu import main_menu                        # —Ç–≤–æ—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é

router = Router()

@router.message(lambda m: m.text == "üéì –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∫—É—Ä—Å—ã")
async def advanced_courses_handler(message: types.Message):
    # –∑–∞–≥–ª—É—à–∫–∞ ‚Äî –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫
    await message.answer(
        "üéì *–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∫—É—Ä—Å—ã* üéì\n\n"
        "1) –ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –ø–æ –¶–∏–≥—É–Ω\n"
        "2) –ì–ª—É–±–æ–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –º–µ–¥–∏—Ç–∞—Ü–∏–π\n\n"
        "–ù–∞–∂–º–∏—Ç–µ —Ü–∏—Ñ—Ä—É –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥.",
        parse_mode="Markdown",
        reply_markup=main_menu()
    )

@router.message(lambda m: m.text == "üéÅ –ë–µ–∑–æ–ø–ª–∞—Ç–Ω—ã–µ")
async def free_practices_handler(message: types.Message):
    await message.answer(
        "üîπ *–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏* üîπ\n\n"
        "1) –ú–µ–¥–∏—Ç–∞—Ü–∏—è –Ω–∞ –∑–∞–∑–µ–º–ª–µ–Ω–∏–µ\n"
        "2) –¶–∏–≥—É–Ω-–ø–∞—É–∑—ã –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è\n"
        "3) –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≥–∞—Ä–º–æ–Ω–∏–∑–∞—Ü–∏–∏ —ç–Ω–µ—Ä–≥–∏–π\n\n"
        "–ù–∞–∂–º–∏—Ç–µ —Ü–∏—Ñ—Ä—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏, –∏–ª–∏ /start –¥–ª—è –º–µ–Ω—é.",
        parse_mode="Markdown",
        reply_markup=main_menu()
    )

@router.message(lambda m: m.text == "üìñ –ö–Ω–∏–≥–∏")
async def books_handler(message: types.Message):
    await message.answer(
        "üìñ *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–Ω–∏–≥* üìñ\n\n"
        "1) ¬´–ü—É—Ç—å –¶–∏–≥—É–Ω¬ª ‚Äî –ê–≤—Ç–æ—Ä A\n"
        "2) ¬´–ò–Ω–Ω–µ—Ä –î–µ–≤–∞—Ç–∞¬ª ‚Äî –ê–≤—Ç–æ—Ä B\n"
        "3) ¬´–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞ —Ç–µ–ª–∞¬ª ‚Äî –ê–≤—Ç–æ—Ä C\n\n"
        "–í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥ –∏–ª–∏ /start.",
        parse_mode="Markdown",
        reply_markup=main_menu()
    )

@router.message(lambda m: m.text == "üîí –ú–æ–∏ –∫—É—Ä—Å—ã")
async def my_courses_handler(message: types.Message):
    await message.answer(
        "üîí –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—Å–æ–≤.\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å.",
        reply_markup=main_menu()
    )

@router.message(lambda m: m.text == "üíñ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç")
async def donate_handler(message: types.Message):
    await message.answer(
        "üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –∂–µ–ª–∞–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç!\n"
        "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–Ω–∞—Ç: https://t.me/Tribute",
        reply_markup=main_menu()
    )

@router.message(lambda m: m.text == "ü§ù –°–ª—É–∂–±–∞ –∑–∞–±–æ—Ç—ã")
async def support_handler(message: types.Message):
    await message.answer(
        "ü§ù *–°–ª—É–∂–±–∞ –∑–∞–±–æ—Ç—ã*\n\n"
        "–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å ‚Äî –ø–∏—à–∏—Ç–µ –Ω–∞ support@domain.com\n"
        "–ò–ª–∏ –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –Ω–∞—à —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏: https://t.me/YourSupportChat",
        parse_mode="Markdown",
        reply_markup=main_menu()
    )

@router.message(lambda message: message.text == "üìö –ú–∏–Ω–∏-–∫—É—Ä—Å—ã")
async def mini_courses_handler(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–∏–Ω–∏-–∫—É—Ä—Å—ã".
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–µ—á–Ω–µ–º –∫—É—Ä—Å–æ–≤ –∏ inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞.
    """

    # 1) –ì–æ—Ç–æ–≤–∏–º —Ç–µ–∫—Å—Ç
    text = (
        "üîπ *–ú–∏–Ω–∏-–∫—É—Ä—Å—ã* üîπ\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:\n"
    )

    # 2) –°–æ–∑–¥–∞—ë–º –±–∏–ª–¥–µ—Ä ‚Äî –≤ –Ω–µ–≥–æ –±—É–¥–µ–º ¬´—Ç—ã–∫–∞—Ç—å¬ª –Ω–∞—à–∏ –∫–Ω–æ–ø–∫–∏
    builder = InlineKeyboardBuilder()

    # 3) –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∫—É—Ä—Å–æ–≤ (–æ–Ω–∏ —Å—Ç–∞–Ω—É—Ç –≤ –æ–¥–Ω—É –∫–æ–ª–æ–Ω–∫—É, —Ç.–∫. –ø–æ—Ç–æ–º adjust(1))
    builder.button(
        text="1Ô∏è‚É£ –û—Å–Ω–æ–≤—ã –¥—ã—Ö–∞–Ω–∏—è",
        callback_data="mini_1"  # –∑–¥–µ—Å—å ID –ø–µ—Ä–≤–æ–≥–æ –º–∏–Ω–∏-–∫—É—Ä—Å–∞
    )
    builder.button(
        text="2Ô∏è‚É£ –£—Ç—Ä–µ–Ω–Ω—è—è —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∞—è –∑–∞—Ä—è–¥–∫–∞",
        callback_data="mini_2"
    )
    builder.button(
        text="3Ô∏è‚É£ –ü—Ä–æ—Å—Ç—ã–µ Qigong-—É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è",
        callback_data="mini_3"
    )

    # 4) –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º, —á—Ç–æ–±—ã –ø–æ 1 –∫–Ω–æ–ø–∫–µ –≤ —Å—Ç—Ä–æ–∫–µ
    builder.adjust(1)

    """# 5) –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    builder.button(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        callback_data="back_to_menu"  # –≤–µ—Ä–Ω—ë–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    )
    builder.button(
        text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="show_main_menu"
    )"""

    # 6) –î–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
    builder.adjust(2)

    # 7) –ü—Ä–µ–≤—Ä–∞—â–∞–µ–º –±–∏–ª–¥–µ—Ä –≤ –≥–æ—Ç–æ–≤—ã–π –æ–±—ä–µ–∫—Ç InlineKeyboardMarkup
    kb = builder.as_markup()

    # 8) –®–ª—ë–º –æ—Ç–≤–µ—Ç
    await message.answer(
        text,
        parse_mode="Markdown",
        reply_markup=kb  # –≤–æ—Ç –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    )
